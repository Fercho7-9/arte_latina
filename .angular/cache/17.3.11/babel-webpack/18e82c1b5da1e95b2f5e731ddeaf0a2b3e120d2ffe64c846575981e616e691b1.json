{"ast":null,"code":"import { OAuthSuccessEvent, OAuthErrorEvent } from 'angular-oauth2-oidc';\nimport { environment } from '../environments/environments';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-oauth2-oidc\";\nexport class AuthGoogleService {\n  constructor(oauthService) {\n    this.oauthService = oauthService;\n    this._authEventSubject = new Subject();\n    this.authEvent$ = this._authEventSubject.asObservable();\n    this.configureOAuth();\n  }\n  configureOAuth() {\n    this.oauthService.configure({\n      clientId: environment.googleOAuth.clientId,\n      redirectUri: environment.googleOAuth.redirectUri,\n      scope: environment.googleOAuth.scope,\n      responseType: environment.googleOAuth.responseType,\n      issuer: environment.googleOAuth.issuer\n    });\n    this.oauthService.events.subscribe(event => {\n      if (event instanceof OAuthSuccessEvent || event instanceof OAuthErrorEvent) {\n        this._authEventSubject.next(event);\n      }\n    });\n  }\n  login() {\n    this.oauthService.initCodeFlow();\n  }\n  logout() {\n    this.oauthService.logOut();\n  }\n  getAccessToken() {\n    return this.oauthService.getAccessToken();\n  }\n  isAuthenticated() {\n    return this.oauthService.hasValidAccessToken();\n  }\n  static {\n    this.ɵfac = function AuthGoogleService_Factory(t) {\n      return new (t || AuthGoogleService)(i0.ɵɵinject(i1.OAuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGoogleService,\n      factory: AuthGoogleService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["OAuthSuccessEvent","OAuthErrorEvent","environment","Subject","AuthGoogleService","constructor","oauthService","_authEventSubject","authEvent$","asObservable","configureOAuth","configure","clientId","googleOAuth","redirectUri","scope","responseType","issuer","events","subscribe","event","next","login","initCodeFlow","logout","logOut","getAccessToken","isAuthenticated","hasValidAccessToken","i0","ɵɵinject","i1","OAuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Fernando\\Desktop\\arte_latino\\arte_latino\\src\\app\\auth-google.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { OAuthService, OAuthSuccessEvent, OAuthErrorEvent } from 'angular-oauth2-oidc';\r\nimport { environment } from '../environments/environments';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGoogleService {\r\n  private readonly _authEventSubject = new Subject<OAuthSuccessEvent | OAuthErrorEvent>();\r\n  authEvent$ = this._authEventSubject.asObservable();\r\n\r\n  constructor(private oauthService: OAuthService) {\r\n    this.configureOAuth();\r\n  }\r\n\r\n  private configureOAuth() {\r\n    this.oauthService.configure({\r\n      clientId: environment.googleOAuth.clientId,\r\n      redirectUri: environment.googleOAuth.redirectUri,\r\n      scope: environment.googleOAuth.scope,\r\n      responseType: environment.googleOAuth.responseType,\r\n      issuer: environment.googleOAuth.issuer,\r\n    });\r\n\r\n    this.oauthService.events.subscribe((event) => {\r\n      if (event instanceof OAuthSuccessEvent || event instanceof OAuthErrorEvent) {\r\n        this._authEventSubject.next(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  login() {\r\n    this.oauthService.initCodeFlow();\r\n  }\r\n\r\n  logout() {\r\n    this.oauthService.logOut();\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this.oauthService.getAccessToken();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.oauthService.hasValidAccessToken();\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAuBA,iBAAiB,EAAEC,eAAe,QAAQ,qBAAqB;AACtF,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,OAAO,QAAQ,MAAM;;;AAK9B,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAHf,KAAAC,iBAAiB,GAAG,IAAIJ,OAAO,EAAuC;IACvF,KAAAK,UAAU,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAGhD,IAAI,CAACC,cAAc,EAAE;EACvB;EAEQA,cAAcA,CAAA;IACpB,IAAI,CAACJ,YAAY,CAACK,SAAS,CAAC;MAC1BC,QAAQ,EAAEV,WAAW,CAACW,WAAW,CAACD,QAAQ;MAC1CE,WAAW,EAAEZ,WAAW,CAACW,WAAW,CAACC,WAAW;MAChDC,KAAK,EAAEb,WAAW,CAACW,WAAW,CAACE,KAAK;MACpCC,YAAY,EAAEd,WAAW,CAACW,WAAW,CAACG,YAAY;MAClDC,MAAM,EAAEf,WAAW,CAACW,WAAW,CAACI;KACjC,CAAC;IAEF,IAAI,CAACX,YAAY,CAACY,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MAC3C,IAAIA,KAAK,YAAYpB,iBAAiB,IAAIoB,KAAK,YAAYnB,eAAe,EAAE;QAC1E,IAAI,CAACM,iBAAiB,CAACc,IAAI,CAACD,KAAK,CAAC;;IAEtC,CAAC,CAAC;EACJ;EAEAE,KAAKA,CAAA;IACH,IAAI,CAAChB,YAAY,CAACiB,YAAY,EAAE;EAClC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAClB,YAAY,CAACmB,MAAM,EAAE;EAC5B;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACpB,YAAY,CAACoB,cAAc,EAAE;EAC3C;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACrB,YAAY,CAACsB,mBAAmB,EAAE;EAChD;;;uBAtCWxB,iBAAiB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;IAAA;EAAA;;;aAAjB5B,iBAAiB;MAAA6B,OAAA,EAAjB7B,iBAAiB,CAAA8B,IAAA;MAAAC,UAAA,EAFhB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}