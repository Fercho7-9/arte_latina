{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartVisible = new BehaviorSubject(false); // Estado inicial del carrito\n    this.cartVisible$ = this.cartVisible.asObservable();\n  }\n  toggleCart(isVisible) {\n    this.cartVisible.next(isVisible); // Actualiza el estado\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","cartVisible","cartVisible$","asObservable","toggleCart","isVisible","next","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Fernando\\Desktop\\arte_latino\\arte_latino\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cartVisible = new BehaviorSubject<boolean>(false); // Estado inicial del carrito\r\n  cartVisible$ = this.cartVisible.asObservable();\r\n\r\n  toggleCart(isVisible: boolean) {\r\n    this.cartVisible.next(isVisible); // Actualiza el estado\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAIU,KAAAC,WAAW,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC,CAAC,CAAC;IAC3D,KAAAI,YAAY,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;;EAE9CC,UAAUA,CAACC,SAAkB;IAC3B,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACD,SAAS,CAAC,CAAC,CAAC;EACpC;;;uBANWN,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}