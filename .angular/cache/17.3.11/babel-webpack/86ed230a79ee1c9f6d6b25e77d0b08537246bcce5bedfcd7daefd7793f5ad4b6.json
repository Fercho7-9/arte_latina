{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SelectRoleComponent = class SelectRoleComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.errorMessage = null;\n    this.successMessage = null;\n  }\n  selectRole(role) {\n    const userId = localStorage.getItem('userId'); // Obtiene el ID del usuario desde localStorage\n    if (!userId) {\n      this.errorMessage = 'No se encontró el ID de usuario. Por favor, inicia sesión.';\n      return;\n    }\n    this.userService.updateRole(userId, role).subscribe(response => {\n      this.successMessage = 'Rol actualizado con éxito.';\n      this.errorMessage = null;\n      // Redirige según el rol seleccionado\n      const targetRoute = role === 'usuario' ? '/home' : '/artista-view';\n      this.router.navigate([targetRoute]);\n    }, error => {\n      this.successMessage = null;\n      this.errorMessage = 'Error al actualizar el rol: ' + error.message;\n    });\n  }\n};\nSelectRoleComponent = __decorate([Component({\n  selector: 'app-select-role',\n  templateUrl: './select-role.component.html',\n  styleUrls: ['./select-role.component.css']\n})], SelectRoleComponent);\nexport { SelectRoleComponent };","map":{"version":3,"names":["Component","SelectRoleComponent","constructor","userService","router","errorMessage","successMessage","selectRole","role","userId","localStorage","getItem","updateRole","subscribe","response","targetRoute","navigate","error","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Fernando\\Desktop\\arte_latino\\arte_latino\\src\\app\\components\\select-rol\\select-rol.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { UserService } from '../services/user.service'; // Ajusta la ruta según tu proyecto\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-select-role',\r\n  templateUrl: './select-role.component.html',\r\n  styleUrls: ['./select-role.component.css']\r\n})\r\nexport class SelectRoleComponent {\r\n  errorMessage: string | null = null;\r\n  successMessage: string | null = null;\r\n\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  selectRole(role: string): void {\r\n    const userId = localStorage.getItem('userId'); // Obtiene el ID del usuario desde localStorage\r\n\r\n    if (!userId) {\r\n      this.errorMessage = 'No se encontró el ID de usuario. Por favor, inicia sesión.';\r\n      return;\r\n    }\r\n\r\n    this.userService.updateRole(userId, role).subscribe(\r\n      (response) => {\r\n        this.successMessage = 'Rol actualizado con éxito.';\r\n        this.errorMessage = null;\r\n\r\n        // Redirige según el rol seleccionado\r\n        const targetRoute = role === 'usuario' ? '/home' : '/artista-view';\r\n        this.router.navigate([targetRoute]);\r\n      },\r\n      (error) => {\r\n        this.successMessage = null;\r\n        this.errorMessage = 'Error al actualizar el rol: ' + error.message;\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAH5D,KAAAC,YAAY,GAAkB,IAAI;IAClC,KAAAC,cAAc,GAAkB,IAAI;EAEmC;EAEvEC,UAAUA,CAACC,IAAY;IACrB,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE/C,IAAI,CAACF,MAAM,EAAE;MACX,IAAI,CAACJ,YAAY,GAAG,4DAA4D;MAChF;;IAGF,IAAI,CAACF,WAAW,CAACS,UAAU,CAACH,MAAM,EAAED,IAAI,CAAC,CAACK,SAAS,CAChDC,QAAQ,IAAI;MACX,IAAI,CAACR,cAAc,GAAG,4BAA4B;MAClD,IAAI,CAACD,YAAY,GAAG,IAAI;MAExB;MACA,MAAMU,WAAW,GAAGP,IAAI,KAAK,SAAS,GAAG,OAAO,GAAG,eAAe;MAClE,IAAI,CAACJ,MAAM,CAACY,QAAQ,CAAC,CAACD,WAAW,CAAC,CAAC;IACrC,CAAC,EACAE,KAAK,IAAI;MACR,IAAI,CAACX,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACD,YAAY,GAAG,8BAA8B,GAAGY,KAAK,CAACC,OAAO;IACpE,CAAC,CACF;EACH;CACD;AA7BYjB,mBAAmB,GAAAkB,UAAA,EAL/BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWrB,mBAAmB,CA6B/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}