{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartOpenSource = new Subject();\n    this.cartOpen$ = this.cartOpenSource.asObservable();\n  }\n  toggleCart(state) {\n    this.cartOpenSource.next(state); // Emitir el nuevo estado\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Subject","CartService","constructor","cartOpenSource","cartOpen$","asObservable","toggleCart","state","next","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Fernando\\Desktop\\arte_latino\\arte_latino\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartService {\r\n  private cartOpenSource = new Subject<boolean>();\r\n  cartOpen$ = this.cartOpenSource.asObservable();\r\n\r\n  toggleCart(state: boolean): void {\r\n    this.cartOpenSource.next(state);  // Emitir el nuevo estado\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAIU,KAAAC,cAAc,GAAG,IAAIH,OAAO,EAAW;IAC/C,KAAAI,SAAS,GAAG,IAAI,CAACD,cAAc,CAACE,YAAY,EAAE;;EAE9CC,UAAUA,CAACC,KAAc;IACvB,IAAI,CAACJ,cAAc,CAACK,IAAI,CAACD,KAAK,CAAC,CAAC,CAAE;EACpC;;;uBANWN,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}